name: Build & Release app

on:
  push:
    branches: ['main']
    tags:
      - 'v*'

jobs:
  build:
    name: Install dependencies and build preact
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-node.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23.11.0'

      - name: Cache node_modules
        id: cache-node
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build preact
        run: npm run build

      - name: Upload built source for other jobs
        uses: actions/upload-artifact@v3
        with:
          name: built-src
          path: |
            node_modules
            dist
            src
            package.json
            package-lock.json

  build-macos:
    name: Build macOS
    runs-on: macos-latest
    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: Download built source
        uses: actions/download-artifact@v3
        with:
          name: built-src
          path: .

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23.11.0'

      - name: Install dependencies (skip if cached)
        run: npm ci

      - name: Rebuild native modules
        run: npm run rebuild

      - name: Package app (make .dmg)
        run: npm run make

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos-build
          path: out/make

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Download built source
        uses: actions/download-artifact@v3
        with:
          name: built-src
          path: .

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Rebuild native modules
        run: npx electron-rebuild

      - name: Package app (make .exe)
        run: npm run make

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: out/make

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Download built source
        uses: actions/download-artifact@v3
        with:
          name: built-src
          path: .

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Rebuild native modules
        run: npx electron-rebuild

      - name: Package app (make .deb, .AppImage, etc.)
        run: npm run make

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: out/make

  release:
    name: Create GitHub Release & upload binaries
    runs-on: ubuntu-latest
    needs: [build-macos, build-windows, build-linux]
    steps:
      - uses: actions/checkout@v3

      - name: Download macOS build
        uses: actions/download-artifact@v3
        with:
          name: macos-build
          path: ./out/make/macos

      - name: Download Windows build
        uses: actions/download-artifact@v3
        with:
          name: windows-build
          path: ./out/make/windows

      - name: Download Linux build
        uses: actions/download-artifact@v3
        with:
          name: linux-build
          path: ./out/make/linux

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            Automated build release for tag ${{ github.ref_name }}

      - name: Upload macOS assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./out/make/macos/*.dmg
          asset_name: app-macos.dmg
          asset_content_type: application/octet-stream

      - name: Upload Windows assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./out/make/windows/*.exe
          asset_name: app-windows.exe
          asset_content_type: application/octet-stream

      - name: Upload Linux assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./out/make/linux/*.{deb,AppImage}
          asset_name: app-linux.deb
          asset_content_type: application/octet-stream